//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public enum EvenSingleAnimal: Codable, Equatable {
    case cat(EvenCat)
    case dog(EvenDog)
    case undecodable

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)
        let discriminator: String = try container.decode("type")
        switch discriminator {
        case "Cat":
            self = .cat(try EvenCat(from: decoder))
        case "Dog":
            self = .dog(try EvenDog(from: decoder))
        case "cat":
            self = .cat(try EvenCat(from: decoder))
        case "dog":
            self = .dog(try EvenDog(from: decoder))
        case "woof":
            self = .dog(try EvenDog(from: decoder))
        default:
            self = .undecodable
        }
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.singleValueContainer()
        switch self {
        case .cat(let content):
            try container.encode(content)
        case .dog(let content):
            try container.encode(content)
        case .undecodable:
            try container.encode("undecodable")
        }
    }
}
