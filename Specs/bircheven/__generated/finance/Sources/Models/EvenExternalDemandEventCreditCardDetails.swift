//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EvenExternalDemandEventCreditCardDetails: BirchModel, Decodable, AutoEquatable {

    public var cardProductName: String?

    public var creditLimit: Float?

    public init(cardProductName: String? = nil, creditLimit: Float? = nil) {
        self.cardProductName = cardProductName
        self.creditLimit = creditLimit
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        cardProductName = try container.decodeIfPresent("cardProductName")
        creditLimit = try container.decodeIfPresent("creditLimit")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(cardProductName, forKey: "cardProductName")
        try container.encodeIfPresent(creditLimit, forKey: "creditLimit")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EvenExternalDemandEventCreditCardDetails else { return false }
      guard self.cardProductName == object.cardProductName else { return false }
      guard self.creditLimit == object.creditLimit else { return false }
      return true
    }

    public static func == (lhs: EvenExternalDemandEventCreditCardDetails, rhs: EvenExternalDemandEventCreditCardDetails) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
