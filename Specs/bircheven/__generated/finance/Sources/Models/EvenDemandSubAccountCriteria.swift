//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EvenDemandSubAccountCriteria: BirchModel, Decodable, AutoEquatable {

    /** List of Uuids pertaining to a Demand Partner Manager */
    public var subAccountOwnerDemandPartnerManager: [ID]?

    /** List of Uuids pertaining to a Demand Yield Manager */
    public var subAccountOwnerDemandYieldManager: [ID]?

    public init(subAccountOwnerDemandPartnerManager: [ID]? = nil, subAccountOwnerDemandYieldManager: [ID]? = nil) {
        self.subAccountOwnerDemandPartnerManager = subAccountOwnerDemandPartnerManager
        self.subAccountOwnerDemandYieldManager = subAccountOwnerDemandYieldManager
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        subAccountOwnerDemandPartnerManager = try container.decodeArrayIfPresent("subAccountOwnerDemandPartnerManager")
        subAccountOwnerDemandYieldManager = try container.decodeArrayIfPresent("subAccountOwnerDemandYieldManager")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(subAccountOwnerDemandPartnerManager, forKey: "subAccountOwnerDemandPartnerManager")
        try container.encodeIfPresent(subAccountOwnerDemandYieldManager, forKey: "subAccountOwnerDemandYieldManager")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EvenDemandSubAccountCriteria else { return false }
      guard self.subAccountOwnerDemandPartnerManager == object.subAccountOwnerDemandPartnerManager else { return false }
      guard self.subAccountOwnerDemandYieldManager == object.subAccountOwnerDemandYieldManager else { return false }
      return true
    }

    public static func == (lhs: EvenDemandSubAccountCriteria, rhs: EvenDemandSubAccountCriteria) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
