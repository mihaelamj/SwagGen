//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EvenAuth: APIModel {

    public var status: Bool

    /** this appears if the user is logged in */
    public var userToken: String?

    public init(status: Bool, userToken: String? = nil) {
        self.status = status
        self.userToken = userToken
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        status = try container.decode("status")
        userToken = try container.decodeIfPresent("user_token")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(status, forKey: "status")
        try container.encodeIfPresent(userToken, forKey: "user_token")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EvenAuth else { return false }
      guard self.status == object.status else { return false }
      guard self.userToken == object.userToken else { return false }
      return true
    }

    public static func == (lhs: EvenAuth, rhs: EvenAuth) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
