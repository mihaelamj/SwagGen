//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EvenIdentifier: APIModel {

    public var crowding: EvenCrowding?

    public var fullName: String?

    public var id: String?

    public var name: String?

    public var type: String?

    public var uri: String?

    public init(crowding: EvenCrowding? = nil, fullName: String? = nil, id: String? = nil, name: String? = nil, type: String? = nil, uri: String? = nil) {
        self.crowding = crowding
        self.fullName = fullName
        self.id = id
        self.name = name
        self.type = type
        self.uri = uri
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        crowding = try container.decodeIfPresent("crowding")
        fullName = try container.decodeIfPresent("fullName")
        id = try container.decodeIfPresent("id")
        name = try container.decodeIfPresent("name")
        type = try container.decodeIfPresent("type")
        uri = try container.decodeIfPresent("uri")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(crowding, forKey: "crowding")
        try container.encodeIfPresent(fullName, forKey: "fullName")
        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(name, forKey: "name")
        try container.encodeIfPresent(type, forKey: "type")
        try container.encodeIfPresent(uri, forKey: "uri")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EvenIdentifier else { return false }
      guard self.crowding == object.crowding else { return false }
      guard self.fullName == object.fullName else { return false }
      guard self.id == object.id else { return false }
      guard self.name == object.name else { return false }
      guard self.type == object.type else { return false }
      guard self.uri == object.uri else { return false }
      return true
    }

    public static func == (lhs: EvenIdentifier, rhs: EvenIdentifier) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
