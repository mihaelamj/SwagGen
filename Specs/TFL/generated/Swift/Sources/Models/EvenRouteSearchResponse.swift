//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EvenRouteSearchResponse: APIModel {

    public var input: String?

    public var searchMatches: [EvenRouteSearchMatch]?

    public init(input: String? = nil, searchMatches: [EvenRouteSearchMatch]? = nil) {
        self.input = input
        self.searchMatches = searchMatches
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        input = try container.decodeIfPresent("input")
        searchMatches = try container.decodeArrayIfPresent("searchMatches")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(input, forKey: "input")
        try container.encodeIfPresent(searchMatches, forKey: "searchMatches")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EvenRouteSearchResponse else { return false }
      guard self.input == object.input else { return false }
      guard self.searchMatches == object.searchMatches else { return false }
      return true
    }

    public static func == (lhs: EvenRouteSearchResponse, rhs: EvenRouteSearchResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
