//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EvenTimeAdjustment: APIModel {

    public var date: String?

    public var time: String?

    public var timeIs: String?

    public var uri: String?

    public init(date: String? = nil, time: String? = nil, timeIs: String? = nil, uri: String? = nil) {
        self.date = date
        self.time = time
        self.timeIs = timeIs
        self.uri = uri
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        date = try container.decodeIfPresent("date")
        time = try container.decodeIfPresent("time")
        timeIs = try container.decodeIfPresent("timeIs")
        uri = try container.decodeIfPresent("uri")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(date, forKey: "date")
        try container.encodeIfPresent(time, forKey: "time")
        try container.encodeIfPresent(timeIs, forKey: "timeIs")
        try container.encodeIfPresent(uri, forKey: "uri")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EvenTimeAdjustment else { return false }
      guard self.date == object.date else { return false }
      guard self.time == object.time else { return false }
      guard self.timeIs == object.timeIs else { return false }
      guard self.uri == object.uri else { return false }
      return true
    }

    public static func == (lhs: EvenTimeAdjustment, rhs: EvenTimeAdjustment) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
