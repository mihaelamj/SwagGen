//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Represents a point located at a latitude and longitude using the WGS84 co-ordinate system. */
public class EvenPoint: APIModel {

    /** WGS84 latitude of the location. */
    public var lat: Double?

    /** WGS84 longitude of the location. */
    public var lon: Double?

    public init(lat: Double? = nil, lon: Double? = nil) {
        self.lat = lat
        self.lon = lon
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        lat = try container.decodeIfPresent("lat")
        lon = try container.decodeIfPresent("lon")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(lat, forKey: "lat")
        try container.encodeIfPresent(lon, forKey: "lon")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EvenPoint else { return false }
      guard self.lat == object.lat else { return false }
      guard self.lon == object.lon else { return false }
      return true
    }

    public static func == (lhs: EvenPoint, rhs: EvenPoint) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
