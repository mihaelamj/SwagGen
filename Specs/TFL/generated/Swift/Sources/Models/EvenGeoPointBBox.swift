//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EvenGeoPointBBox: APIModel {

    public var swLat: Double

    public var swLon: Double

    public var neLat: Double

    public var neLon: Double

    public init(swLat: Double, swLon: Double, neLat: Double, neLon: Double) {
        self.swLat = swLat
        self.swLon = swLon
        self.neLat = neLat
        self.neLon = neLon
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        swLat = try container.decode("swLat")
        swLon = try container.decode("swLon")
        neLat = try container.decode("neLat")
        neLon = try container.decode("neLon")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(swLat, forKey: "swLat")
        try container.encode(swLon, forKey: "swLon")
        try container.encode(neLat, forKey: "neLat")
        try container.encode(neLon, forKey: "neLon")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EvenGeoPointBBox else { return false }
      guard self.swLat == object.swLat else { return false }
      guard self.swLon == object.swLon else { return false }
      guard self.neLat == object.neLat else { return false }
      guard self.neLon == object.neLon else { return false }
      return true
    }

    public static func == (lhs: EvenGeoPointBBox, rhs: EvenGeoPointBBox) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
