//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EvenRedirect: APIModel {

    public var active: Bool?

    public var longUrl: String?

    public var shortUrl: String?

    public init(active: Bool? = nil, longUrl: String? = nil, shortUrl: String? = nil) {
        self.active = active
        self.longUrl = longUrl
        self.shortUrl = shortUrl
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        active = try container.decodeIfPresent("active")
        longUrl = try container.decodeIfPresent("longUrl")
        shortUrl = try container.decodeIfPresent("shortUrl")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(active, forKey: "active")
        try container.encodeIfPresent(longUrl, forKey: "longUrl")
        try container.encodeIfPresent(shortUrl, forKey: "shortUrl")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EvenRedirect else { return false }
      guard self.active == object.active else { return false }
      guard self.longUrl == object.longUrl else { return false }
      guard self.shortUrl == object.shortUrl else { return false }
      return true
    }

    public static func == (lhs: EvenRedirect, rhs: EvenRedirect) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
