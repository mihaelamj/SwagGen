//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EvenSchedule: APIModel {

    public var firstJourney: EvenKnownJourney?

    public var knownJourneys: [EvenKnownJourney]?

    public var lastJourney: EvenKnownJourney?

    public var name: String?

    public var periods: [EvenPeriod]?

    public init(firstJourney: EvenKnownJourney? = nil, knownJourneys: [EvenKnownJourney]? = nil, lastJourney: EvenKnownJourney? = nil, name: String? = nil, periods: [EvenPeriod]? = nil) {
        self.firstJourney = firstJourney
        self.knownJourneys = knownJourneys
        self.lastJourney = lastJourney
        self.name = name
        self.periods = periods
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        firstJourney = try container.decodeIfPresent("firstJourney")
        knownJourneys = try container.decodeArrayIfPresent("knownJourneys")
        lastJourney = try container.decodeIfPresent("lastJourney")
        name = try container.decodeIfPresent("name")
        periods = try container.decodeArrayIfPresent("periods")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(firstJourney, forKey: "firstJourney")
        try container.encodeIfPresent(knownJourneys, forKey: "knownJourneys")
        try container.encodeIfPresent(lastJourney, forKey: "lastJourney")
        try container.encodeIfPresent(name, forKey: "name")
        try container.encodeIfPresent(periods, forKey: "periods")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EvenSchedule else { return false }
      guard self.firstJourney == object.firstJourney else { return false }
      guard self.knownJourneys == object.knownJourneys else { return false }
      guard self.lastJourney == object.lastJourney else { return false }
      guard self.name == object.name else { return false }
      guard self.periods == object.periods else { return false }
      return true
    }

    public static func == (lhs: EvenSchedule, rhs: EvenSchedule) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
