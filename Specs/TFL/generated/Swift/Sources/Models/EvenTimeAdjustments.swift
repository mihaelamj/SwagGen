//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EvenTimeAdjustments: APIModel {

    public var earlier: EvenTimeAdjustment?

    public var earliest: EvenTimeAdjustment?

    public var later: EvenTimeAdjustment?

    public var latest: EvenTimeAdjustment?

    public init(earlier: EvenTimeAdjustment? = nil, earliest: EvenTimeAdjustment? = nil, later: EvenTimeAdjustment? = nil, latest: EvenTimeAdjustment? = nil) {
        self.earlier = earlier
        self.earliest = earliest
        self.later = later
        self.latest = latest
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        earlier = try container.decodeIfPresent("earlier")
        earliest = try container.decodeIfPresent("earliest")
        later = try container.decodeIfPresent("later")
        latest = try container.decodeIfPresent("latest")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(earlier, forKey: "earlier")
        try container.encodeIfPresent(earliest, forKey: "earliest")
        try container.encodeIfPresent(later, forKey: "later")
        try container.encodeIfPresent(latest, forKey: "latest")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EvenTimeAdjustments else { return false }
      guard self.earlier == object.earlier else { return false }
      guard self.earliest == object.earliest else { return false }
      guard self.later == object.later else { return false }
      guard self.latest == object.latest else { return false }
      return true
    }

    public static func == (lhs: EvenTimeAdjustments, rhs: EvenTimeAdjustments) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
