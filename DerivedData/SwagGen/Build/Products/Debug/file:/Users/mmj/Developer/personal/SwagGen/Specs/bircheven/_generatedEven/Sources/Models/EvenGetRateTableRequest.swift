//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EvenGetRateTableRequest: BirchModel, Decodable, AutoEquatable {

    /** Type of Lead to return RateTable for.
     */
    public enum EvenProductType: String, Codable, Equatable, CaseIterable {
        case creditCard = "credit_card"
        case loan = "loan"
        case savings = "savings"
        case undecodable

        public init(from decoder: Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(String.self)
            self = EvenProductType(rawValue: rawValue) ?? .undecodable
        }
    }

    /** Type of Lead to return RateTable for.
 */
    public var productType: EvenProductType

    public init(productType: EvenProductType) {
        self.productType = productType
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        productType = try container.decode("productType")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(productType, forKey: "productType")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EvenGetRateTableRequest else { return false }
      guard self.productType == object.productType else { return false }
      return true
    }

    public static func == (lhs: EvenGetRateTableRequest, rhs: EvenGetRateTableRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
