//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EvenDemandContractCreateData: BirchModel, Decodable, AutoEquatable {

    public var subAccountId: Int

    public var effectiveAt: DateDay

    public var revenueClauses: [EvenRevenueClause]

    public init(subAccountId: Int, effectiveAt: DateDay, revenueClauses: [EvenRevenueClause]) {
        self.subAccountId = subAccountId
        self.effectiveAt = effectiveAt
        self.revenueClauses = revenueClauses
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        subAccountId = try container.decode("subAccountId")
        effectiveAt = try container.decode("effectiveAt")
        revenueClauses = try container.decodeArray("revenueClauses")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(subAccountId, forKey: "subAccountId")
        try container.encode(effectiveAt, forKey: "effectiveAt")
        try container.encode(revenueClauses, forKey: "revenueClauses")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EvenDemandContractCreateData else { return false }
      guard self.subAccountId == object.subAccountId else { return false }
      guard self.effectiveAt == object.effectiveAt else { return false }
      guard self.revenueClauses == object.revenueClauses else { return false }
      return true
    }

    public static func == (lhs: EvenDemandContractCreateData, rhs: EvenDemandContractCreateData) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
