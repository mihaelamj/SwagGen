//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EvenDemandSubAccountOwnerCreateData: BirchModel, Decodable, AutoEquatable {

    public var demandManager: ID?

    public var demandSubAccountId: Int?

    public var demandYieldManager: ID?

    public init(demandManager: ID? = nil, demandSubAccountId: Int? = nil, demandYieldManager: ID? = nil) {
        self.demandManager = demandManager
        self.demandSubAccountId = demandSubAccountId
        self.demandYieldManager = demandYieldManager
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        demandManager = try container.decodeIfPresent("demandManager")
        demandSubAccountId = try container.decodeIfPresent("demandSubAccountId")
        demandYieldManager = try container.decodeIfPresent("demandYieldManager")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(demandManager, forKey: "demandManager")
        try container.encodeIfPresent(demandSubAccountId, forKey: "demandSubAccountId")
        try container.encodeIfPresent(demandYieldManager, forKey: "demandYieldManager")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EvenDemandSubAccountOwnerCreateData else { return false }
      guard self.demandManager == object.demandManager else { return false }
      guard self.demandSubAccountId == object.demandSubAccountId else { return false }
      guard self.demandYieldManager == object.demandYieldManager else { return false }
      return true
    }

    public static func == (lhs: EvenDemandSubAccountOwnerCreateData, rhs: EvenDemandSubAccountOwnerCreateData) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
