//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EvenLedgerItemCreateData: BirchModel, Decodable, AutoEquatable {

    public var billingCycleId: Int

    public var targetDate: DateDay

    public init(billingCycleId: Int, targetDate: DateDay) {
        self.billingCycleId = billingCycleId
        self.targetDate = targetDate
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        billingCycleId = try container.decode("billingCycleId")
        targetDate = try container.decode("targetDate")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(billingCycleId, forKey: "billingCycleId")
        try container.encode(targetDate, forKey: "targetDate")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EvenLedgerItemCreateData else { return false }
      guard self.billingCycleId == object.billingCycleId else { return false }
      guard self.targetDate == object.targetDate else { return false }
      return true
    }

    public static func == (lhs: EvenLedgerItemCreateData, rhs: EvenLedgerItemCreateData) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
