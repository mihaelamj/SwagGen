//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EvenSubAccountCreateData: BirchModel, Decodable, AutoEquatable {

    public var accountId: Int

    public var name: String

    public var displayName: String

    public var roles: [String]

    public var notes: String?

    /** Override the default auto-generated call to action subtext for issuers */
    public var subtextOverride: String?

    public init(accountId: Int, name: String, displayName: String, roles: [String], notes: String? = nil, subtextOverride: String? = nil) {
        self.accountId = accountId
        self.name = name
        self.displayName = displayName
        self.roles = roles
        self.notes = notes
        self.subtextOverride = subtextOverride
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        accountId = try container.decode("accountId")
        name = try container.decode("name")
        displayName = try container.decode("displayName")
        roles = try container.decodeArray("roles")
        notes = try container.decodeIfPresent("notes")
        subtextOverride = try container.decodeIfPresent("subtextOverride")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(accountId, forKey: "accountId")
        try container.encode(name, forKey: "name")
        try container.encode(displayName, forKey: "displayName")
        try container.encode(roles, forKey: "roles")
        try container.encodeIfPresent(notes, forKey: "notes")
        try container.encodeIfPresent(subtextOverride, forKey: "subtextOverride")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EvenSubAccountCreateData else { return false }
      guard self.accountId == object.accountId else { return false }
      guard self.name == object.name else { return false }
      guard self.displayName == object.displayName else { return false }
      guard self.roles == object.roles else { return false }
      guard self.notes == object.notes else { return false }
      guard self.subtextOverride == object.subtextOverride else { return false }
      return true
    }

    public static func == (lhs: EvenSubAccountCreateData, rhs: EvenSubAccountCreateData) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
