//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EvenDemandDataImportCreateData: BirchModel, Decodable, AutoEquatable {

    /** A unique identifer for the file that is being imported
 */
    public var fileId: Int

    /** A unique identifier for the configuration details to be used on file import
 */
    public var configurationId: Int

    public init(fileId: Int, configurationId: Int) {
        self.fileId = fileId
        self.configurationId = configurationId
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        fileId = try container.decode("fileId")
        configurationId = try container.decode("configurationId")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(fileId, forKey: "fileId")
        try container.encode(configurationId, forKey: "configurationId")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EvenDemandDataImportCreateData else { return false }
      guard self.fileId == object.fileId else { return false }
      guard self.configurationId == object.configurationId else { return false }
      return true
    }

    public static func == (lhs: EvenDemandDataImportCreateData, rhs: EvenDemandDataImportCreateData) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
