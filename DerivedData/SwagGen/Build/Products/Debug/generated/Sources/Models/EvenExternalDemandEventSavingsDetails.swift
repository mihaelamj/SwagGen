//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EvenExternalDemandEventSavingsDetails: BirchModel, Decodable, AutoEquatable {

    public var fundedAmount: Float?

    public init(fundedAmount: Float? = nil) {
        self.fundedAmount = fundedAmount
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        fundedAmount = try container.decodeIfPresent("fundedAmount")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(fundedAmount, forKey: "fundedAmount")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EvenExternalDemandEventSavingsDetails else { return false }
      guard self.fundedAmount == object.fundedAmount else { return false }
      return true
    }

    public static func == (lhs: EvenExternalDemandEventSavingsDetails, rhs: EvenExternalDemandEventSavingsDetails) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
