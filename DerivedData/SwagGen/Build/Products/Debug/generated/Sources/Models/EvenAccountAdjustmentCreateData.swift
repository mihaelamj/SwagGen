//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EvenAccountAdjustmentCreateData: BirchModel, Decodable, AutoEquatable {

    public var accountId: Int

    public var amount: Double

    public var adjustmentReason: EvenAdjustmentReason

    public var ledgerItemId: Int?

    public var memo: String?

    public init(accountId: Int, amount: Double, adjustmentReason: EvenAdjustmentReason, ledgerItemId: Int? = nil, memo: String? = nil) {
        self.accountId = accountId
        self.amount = amount
        self.adjustmentReason = adjustmentReason
        self.ledgerItemId = ledgerItemId
        self.memo = memo
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        accountId = try container.decode("accountId")
        amount = try container.decode("amount")
        adjustmentReason = try container.decode("adjustmentReason")
        ledgerItemId = try container.decodeIfPresent("ledgerItemId")
        memo = try container.decodeIfPresent("memo")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(accountId, forKey: "accountId")
        try container.encode(amount, forKey: "amount")
        try container.encode(adjustmentReason, forKey: "adjustmentReason")
        try container.encodeIfPresent(ledgerItemId, forKey: "ledgerItemId")
        try container.encodeIfPresent(memo, forKey: "memo")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EvenAccountAdjustmentCreateData else { return false }
      guard self.accountId == object.accountId else { return false }
      guard self.amount == object.amount else { return false }
      guard self.adjustmentReason == object.adjustmentReason else { return false }
      guard self.ledgerItemId == object.ledgerItemId else { return false }
      guard self.memo == object.memo else { return false }
      return true
    }

    public static func == (lhs: EvenAccountAdjustmentCreateData, rhs: EvenAccountAdjustmentCreateData) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
