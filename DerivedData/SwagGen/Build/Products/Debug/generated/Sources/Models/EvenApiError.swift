//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EvenApiError: BirchModel, Decodable, AutoEquatable {

    public var attribute: String?

    public var details: [String: String]?

    public var message: String?

    public var type: String?

    public init(attribute: String? = nil, details: [String: String]? = nil, message: String? = nil, type: String? = nil) {
        self.attribute = attribute
        self.details = details
        self.message = message
        self.type = type
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        attribute = try container.decodeIfPresent("attribute")
        details = try container.decodeIfPresent("details")
        message = try container.decodeIfPresent("message")
        type = try container.decodeIfPresent("type")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(attribute, forKey: "attribute")
        try container.encodeIfPresent(details, forKey: "details")
        try container.encodeIfPresent(message, forKey: "message")
        try container.encodeIfPresent(type, forKey: "type")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EvenApiError else { return false }
      guard self.attribute == object.attribute else { return false }
      guard self.details == object.details else { return false }
      guard self.message == object.message else { return false }
      guard self.type == object.type else { return false }
      return true
    }

    public static func == (lhs: EvenApiError, rhs: EvenApiError) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
